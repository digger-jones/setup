#!/usr/bin/env bash

# foreground colours
red="\033[31m"
grn="\033[32m"
blu="\033[34m"
yel="\033[33m"

# This 'terminates' any terminal escape codes you run, so it's like an 'end marker'
end="\033[0m"

# Some icons
chk=$'\xE2\x9C\x94 '
mss=$'\xE2\x9D\x8C '
wrn=$'\xE2\x9A\xA0 '

if [ -z $(command -v yq) ]; then
    echo -e "${red}${mss} ERROR: Please install yq${end}"
    echo -e "${blu}MacOS:${end} brew install yq"
    exit 0
else
    echo -e "${grn}${chk} yq is installed as expected${end}"
fi

if [ -z $(command -v kubectl) ]; then
    echo -e "${red}${mss} ERROR: kubectl is not installed, we cannot continue${end}"
    exit 0
else
    echo -e "${grn}${chk} kubectl is installed as expected${end}"
fi

echo -e "${yel}${wrn}${end} Just because a tool is installed, doesn't mean it functions as required, or if configured correctly. You need to do that yourself"

function required () {
    eval v="\$$1";

    if [ -z "$v" ]; then
        echo "'$1' envvar is not configured, exiting..."
        exit 0;
    elif [ ! -f "$2" ]; then
        echo "'$2' was not a file, exiting..."
        exit 0;
    else
        echo "Rewriting required variable '$1' in file '$2'"
        NEWFILE=$(cat $2 | sed "s#{{ $1 }}#$v#g")

        [ -z "${NEWFILE}" ] && echo "The output from sed was empty" && exit 0

        echo "${NEWFILE}" > $2
    fi
}

cp $PWD/kubeconfig.template $PWD/kubeconfig

NAMESPACE=$(cat values.yaml | yq r - namespace)
SECRET_NAME=$(kubectl -n ${NAMESPACE} get sa ${NAMESPACE}-deploy-account -o "jsonpath={.secrets[0].name}")
USER_TOKEN=$(kubectl -n ${NAMESPACE} get secret ${SECRET_NAME} -o "jsonpath={.data.token}" | base64 -D)
CERTIFICATE=$(kubectl -n ${NAMESPACE} get secret ${SECRET_NAME} -o "jsonpath={.data['ca\.crt']}")
CLUSTER_NAME=$(kubectl config view -o "jsonpath={.clusters[0].name}")
API_ENDPOINT=$(kubectl config view -o "jsonpath={.clusters[0].cluster.server}")

required NAMESPACE $PWD/kubeconfig
required USER_TOKEN $PWD/kubeconfig
required CERTIFICATE $PWD/kubeconfig
required CLUSTER_NAME $PWD/kubeconfig
required API_ENDPOINT $PWD/kubeconfig


